import json
import ollama

# This script defines a function to evaluate a student's essay based on a JSON input,
# using the Ollama API to interact with the Gemma model. It constructs a system prompt
# and a user prompt, sends them to the model, and returns the evaluation response.  

def avaliar_redacao(json_input: str) -> str:
    """
    Receives a JSON string with 'proposta', 'redacao', and 'notas',
    and returns the textual evaluation generated by the Gemma model via Ollama.
    """

    # Parse JSON
    data = json.loads(json_input)
    proposta = data["proposta"]
    redacao = data["redacao"]
    notas = data["notas"]

    # Monta o system prompt
    system_prompt = (
        "Você é um avaliador pedagógico especialista em produção textual no contexto do ENEM. "
        "Sua tarefa é analisar uma redação escrita por um estudante, considerando as notas atribuídas "
        "a cada uma das cinco competências avaliativas do exame e também a proposta da redação correspondente.\n\n"
        "Você deve gerar sugestões específicas de melhoria para o texto, sempre levando em conta:\n"
        "- O conteúdo integral da redação produzida.\n"
        "- As notas atribuídas em cada uma das cinco competências (0–200).\n"
        "- A proposta da redação (tema e/ou texto motivador).\n\n"
        "Apresente sua resposta no seguinte formato:\n\n"
        "---\n"
        "**Competência X** – Nota: [nota atribuída]\n"
        "[Até 3 sugestões focadas nessa competência, levando em conta o conteúdo da redação, o escopo da proposta e a nota recebida]\n"
        "---\n\n"
        "Importante: Use a proposta da redação para avaliar a pertinência temática e o foco argumentativo do estudante. "
        "Se a proposta de intervenção for vaga, sugira maneiras de conectá-la melhor ao problema central. "
        "Não reescreva a redação nem emita julgamentos genéricos; concentre-se em orientar melhorias concretas."
    )

    # Monta o user prompt
    user_prompt = (
        f"Proposta da redação:\n{proposta}\n\n"
        f"Texto da redação:\n{redacao}\n\n"
        f"Notas por competência:\n"
        f"Competência 1: {notas['competencia1']}\n"
        f"Competência 2: {notas['competencia2']}\n"
        f"Competência 3: {notas['competencia3']}\n"
        f"Competência 4: {notas['competencia4']}\n"
        f"Competência 5: {notas['competencia5']}"
    )

    # Chamada ao modelo via Ollama
    response = ollama.chat(
        model="gemma:7b",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": user_prompt}
        ]
    )

    return response["message"]["content"]

# Exemplo de uso
if __name__ == "__main__":
    json_input = json.dumps({
        "proposta": "A importância da educação ambiental nas escolas.",
        "redacao": "A educação ambiental é fundamental para formar cidadãos conscientes...",
        "notas": {
            "competencia1": 180,
            "competencia2": 150,
            "competencia3": 170,
            "competencia4": 160,
            "competencia5": 140
        }
    })
    
    resultado = avaliar_redacao(json_input)
    print(resultado)
